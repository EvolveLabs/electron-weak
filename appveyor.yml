os: Visual Studio 2015 CTP
platform: x64
version: "{build}"

# Test against this version of iojs.js
environment:
  target: "0.28.2"
  nodejs_version: "2.2.1"
  publish_binary: false
  bin_dir: ./node_modules/electron-updater-tools/bin
  s3accessKeyId:
    secure: PVDgucwZsp5vUQ/xtHKh0zZKLrNp9Bx/6KrR+1HjXBA=
  s3secretAccessKey:
    secure: /eTaC32nbaLggEfy5UuubTff2t7ogo7ztazLDA600ln6dG0LiSqWZYMZFBcurpdP

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version $env:platform
  # install modules
  - npm config set loglevel warn
  - npm install -g is-property # workaround until node 2.3.1
  - npm install -g node-gyp
  - npm install -g electron-prebuilt
  - npm install
  # Publish builds from tags
  - for /f "delims=" %%i in ('git describe --tags --always HEAD') do set HEAD=%%i
  - if "%APPVEYOR_REPO_BRANCH%" == "%HEAD%" ( set PUBLISH_BINARY=true )
  # Or if COMMIT_MESSAGE contains [publish binary]
  - for /f "delims=" %%i in ('git show -s --oneline HEAD') do set COMMIT_MESSAGE=%%i
  - (echo %COMMIT_MESSAGE% | find "[publish binary]" > nul) && (set PUBLISH_BINARY=true) || (ver > nul)

test_script:
  - npm test

build_script:
  - bash %bin_dir%/elb --target %target% configure release x64
  - bash %bin_dir%/elb --target %target% configure release x86

after_build:
  - node %bin_dir%/elpack --configuration release --arch x64
  - node %bin_dir%/elpack --configuration release --arch x86

deploy_script:
  - if "%PUBLISH_BINARY%" == "true" ( node %bin_dir%/nwpub -i %s3accessKeyId% -k %s3secretAccessKey% -C release -a x64 )
  - if "%PUBLISH_BINARY%" == "true" ( node %bin_dir%/nwpub -i %s3accessKeyId% -k %s3secretAccessKey% -C release -a x86 )